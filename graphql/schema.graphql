"A date String with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime String with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}

type Lecturer {
    name: String
    id: ID!
    created_at: DateTime!
    updated_at: DateTime!

    nidn: String
    doctor_degree: String
    magister_degree: String
    academic_job: String
    specialty: String
    education_certificate_number: String
    is_ps_competent: Boolean
}

type Mutation {
    createLecturer(input: CreateLecturerInput! @spread): Lecturer! @create
    updateLecturer(id: ID!, input: CreateLecturerInput! @spread): Lecturer!
        @update
    deleteLecturers(id: [ID!]!): [Lecturer!]! @delete
}

input CreateLecturerInput {
    name: String!
    nidn: String
    doctor_degree: String
    magister_degree: String
    specialty: String
    academic_job: String
    education_certificate_number: String
    is_ps_competent: Boolean
}

type Query {
    users: [User!]! @paginate(type: CONNECTION)
    user(id: ID @eq): User @find
    lecturer(id: ID @eq): Lecturer @find
    lecturers(
        where: _
            @whereConditions(
                columns: [
                    "name"
                    "ID"
                    "created_at"
                    "updated_at"
                    "nidn"
                    "doctor_degree"
                    "magister_degree"
                    "academic_job"
                    "specialty"
                    "education_certificate_number"
                    "is_ps_competent"
                ]
            )
    ): [Lecturer!]! @paginate(type: CONNECTION)
}
